// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Template.Data;

#nullable disable

namespace Template.Migrations
{
    [DbContext(typeof(TemplateContext))]
    [Migration("20230512191909_addNote")]
    partial class addNote
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Template.Models.ExternalEntity", b =>
                {
                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Port")
                        .HasColumnType("int");

                    b.Property<string>("ServerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServerName");

                    b.ToTable("ExternalEntities");
                });

            modelBuilder.Entity("template.Models.Notation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Coefficient")
                        .HasColumnType("float");

                    b.Property<string>("Descipline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DesciplineCode")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRevision")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTest")
                        .HasColumnType("bit");

                    b.Property<double>("Note")
                        .HasColumnType("float");

                    b.Property<int>("PhaseFormationCode")
                        .HasColumnType("int");

                    b.Property<string>("PhaseFormationDisplay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notations");
                });

            modelBuilder.Entity("Template.Models.Personne", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personnes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b2e852ed-c192-47b2-a464-a0ad23ad31ae"),
                            Age = 1,
                            CreationTimeUtc = new DateTime(2023, 5, 12, 19, 19, 9, 283, DateTimeKind.Utc).AddTicks(4756),
                            IsDeleted = false,
                            Nom = "Djehinet",
                            Prenom = "Djawed"
                        },
                        new
                        {
                            Id = new Guid("ace63e00-8520-4346-bfa4-88c14ce7ef1e"),
                            Age = 32,
                            CreationTimeUtc = new DateTime(2023, 5, 12, 19, 19, 9, 283, DateTimeKind.Utc).AddTicks(4771),
                            IsDeleted = false,
                            Nom = "Djehinet",
                            Prenom = "Nadjib"
                        },
                        new
                        {
                            Id = new Guid("11780f8a-a503-419d-952f-63ee2c0f4a3e"),
                            Age = 30,
                            CreationTimeUtc = new DateTime(2023, 5, 12, 19, 19, 9, 283, DateTimeKind.Utc).AddTicks(4777),
                            IsDeleted = false,
                            Nom = "Djehinet",
                            Prenom = "Fateh"
                        });
                });

            modelBuilder.Entity("Template.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "djawed",
                            LastName = "djehinet",
                            PasswordHash = "$2a$11$EYjFiD/mUA9eCtNuS6O.du.ezBbIIaq1WQqUydaA8tmX/cC5bDVFK",
                            Username = "djawed"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
